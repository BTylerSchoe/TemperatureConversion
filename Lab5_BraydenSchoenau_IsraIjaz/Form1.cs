/********************************************************************
 * Program Name:            TemperatureConversionForm
 * 
 * Author:                  Brayden Schoenau
 * 
 * Date:                    1/5/2018
 * 
 * Description:             A small Windows form application that prompts the
 *                          user to enter a valid numeric temperature, 
 *                          then asks to convert to either Celsius or Fahrenheit.
 *                          The app then displays then converted temperature to the user 
 *                          in a textbox.
 *                          
 *  GUI Design adopted from Lab 5by <Brayden Schoenau & Isra Ijaz>
 * 
 *******************************************************************/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Lab5_BraydenSchoenau_IsraIjaz
{
    public partial class frmTemperatureConversion : Form
    {
        public frmTemperatureConversion()
        {
            InitializeComponent();
        }

        private void frmTemperatureConversion_Load(object sender, EventArgs e)
        {

        }
        private void rbCelcius_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void rbrFahrenheit_CheckedChanged(object sender, EventArgs e)
        {

        }
        /// <summary>
        ///  Event handeler for btnCalculate which will calculate the converted temperature.
        /// </summary>
        /// <param name="sender"> The object that generated the event.</param>
        /// <param name="e"> The event that was generated by clicking the btnCalulate. </param>
        private void btnCalculate_Click(object sender, EventArgs e)
        {
            // Assign userInput as a double variable equal to 0.0.
            double userInput = 0.0;
            // Assign calulatedTemperatureCelsius as a double variable equal to 0.0.
            double calculatedTemperatureCelsius = 0.0;
            // Assign calculatedTemperatureFahrenheit asa double variable equal to 0.0.
            double calculatedTemperatureFahrenheit = 0.0;


            // If user input is a valid numeric entry, store user input into userInput variable.
            if (double.TryParse(txtTemperatureValue.Text, out userInput) == false)
            {
                // If user input is not a valid numeric entry, display error message "Please enter a valid numeric number".
                MessageBox.Show("ERROR: Please enter a numeric temperature to convert");
                // switch focus to txtTemperatureValue text box.
                txtTemperatureValue.Focus();
            }
            // If user has selected Celsius radio button.
            else if (rbtCelsius.Checked)
            {
                // Assign calculated temperature value to the double variable calculatedTemperatureCelsius.
                calculatedTemperatureCelsius = Math.Round(((userInput - 32) * 5) / 9, 2);
                // Display converted temperature in the lblConvertedValue textbox.
                lblConvertedValue.Text = userInput + " degrees Fahrenheit converts to " + calculatedTemperatureCelsius.ToString() + " degrees Celsius.";
            }
            // If user has selected Fahrenheit radio button.
            else if (rbtFahrenheit.Checked)
            {
                // Assign calculated temperature value to the double variable calculatedTemperatureFahrenheit.
                calculatedTemperatureFahrenheit = Math.Round(((userInput * 9) / 5) + 32, 2);
                // Display the converted temperature in the lblConvertedValue textbox.
                lblConvertedValue.Text = userInput + " degrees Celsius converts to " + calculatedTemperatureFahrenheit.ToString() + " degrees Fahrenheit.";
            }
            

        }
        /// <summary>
        ///  Event handeler for btnReset, which will reset the application.
        /// </summary>
        /// <param name="sender"> The object that generated the event. </param>
        /// <param name="e"> The event that was generated by clicking the btnReset</param>
        private void btnReset_Click(object sender, EventArgs e)
        {
            // Set lblConvertedValue value to a Blank string.
            lblConvertedValue.Text = "";
            // Set txtTemperatureValue value to a Blank string.
            txtTemperatureValue.Text = "";
            // Set rbtCelsius to checked(Back to default).
            rbtCelsius.Checked = true;
            // Set focus to txtTemperatureValue.
            txtTemperatureValue.Focus();
        }
        /// <summary>
        ///  Event handeler for btnExit, which will close the application.
        /// </summary>
        /// <param name="sender">Control object that generated the event. </param>
        /// <param name="e">The object that was generated by clicking the btnExit. </param>
        private void btnExit_Click(object sender, EventArgs e)
        {
            // Close the application.
            this.Close();
        }

        private void txtTemperatureValue_TextChanged(object sender, EventArgs e)
        {

        }
    }
}
